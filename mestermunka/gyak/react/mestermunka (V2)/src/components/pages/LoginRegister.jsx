import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import 'bootstrap/dist/css/bootstrap.min.css';
import './LoginRegister.css'; // CSS f√°jl import√°l√°sa

export const Login = () => {
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isRegistering, setIsRegistering] = useState(false); // Alap√©rtelmezetten bejelentkez√©s
  const navigate = useNavigate();

  const values ={
    username,
    email,
    password
  }

  const register = (event) => {
    event.preventDefault();

    const userData = {
        Felhasznalonev: username.trim(), // üîπ Elt√°vol√≠tja az esetleges felesleges sz√≥k√∂z√∂ket
        Email: email.trim(),
        password: password.trim()
    };

    if (!userData.Felhasznalonev || !userData.Email || !userData.password) {
        alert("Minden mez≈ët ki kell t√∂lteni!");
        return;
    }

    axios.post("http://localhost:3001/register", userData, {
        headers: { "Content-Type": "application/json" }
    })
    .then(response => {
        console.log("Regisztr√°ci√≥ sikeres:", response.data);
        alert("Sikeres regisztr√°ci√≥!");
    })
    .catch(error => {
        console.error("Hiba t√∂rt√©nt a regisztr√°ci√≥ sor√°n:", error.response ? error.response.data : error.message);
        alert(error.response?.data?.error || "Hiba t√∂rt√©nt a regisztr√°ci√≥ sor√°n!");
    });
};



const login = (event) => {
  event.preventDefault();

  axios.post("http://localhost:3001/login", {
      Email: email,
      password: password
  }, {
      headers: { "Content-Type": "application/json" }
  })
  .then(response => {
      console.log("‚úÖ Sikeres bejelentkez√©s:", response.data);
      alert("Sikeres bejelentkez√©s!");
  })
  .catch(error => {
      console.error("‚ùå Hiba t√∂rt√©nt a bejelentkez√©s sor√°n:", error.response ? error.response.data : error.message);
      alert(error.response?.data?.error || "Hiba t√∂rt√©nt a bejelentkez√©s sor√°n!");
  });
};

  return (
    <div className="login-register-container">
      <div className="form-container">
        {/* Regisztr√°ci√≥s blokk */}
        <div className={`form-box ${isRegistering ? 'active' : ''}`}>
          <h1>Regisztr√°ci√≥</h1>
          <form onSubmit={register}>
            <div className="input-group">
              <input
                type="text"
                placeholder="Felhaszn√°l√≥n√©v"
                className="form-control"
                onChange={(e) => setUsername(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <input
                type="email"
                placeholder="Email"
                className="form-control"
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <input
                type="password"
                placeholder="Jelsz√≥"
                className="form-control"
                onChange={(e) => setPassword(e.target.value)}
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">Regisztr√°ci√≥</button>
          </form>
        </div>

        {/* Bejelentkez√©si blokk */}
        <div className={`form-box ${!isRegistering ? 'active' : ''}`}>
          <h1>Bejelentkez√©s</h1>
          <form onSubmit={login}>
            <div className="input-group">
              <input
                type="text"
                placeholder="Felhaszn√°l√≥n√©v"
                className="form-control"
                onChange={(e) => setUsername(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <input
                type="email"
                placeholder="Email"
                className="form-control"
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <input
                type="password"
                placeholder="Jelsz√≥"
                className="form-control"
                onChange={(e) => setPassword(e.target.value)}
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">Bejelentkez√©s</button>
          </form>
        </div>
      </div>

      {/* Regisztr√°ci√≥ / Bejelentkez√©s k√∂z√∂tti v√°lt√°s */}
      <div className="toggle-box">
        <button
          className="btn btn-link"
          onClick={() => setIsRegistering(!isRegistering)}
        >
          {isRegistering ? "M√°r van fi√≥kod? Bejelentkez√©s" : "Nincs fi√≥kod? Regisztr√°ci√≥"}
        </button>
      </div>
    </div>
  );
};
