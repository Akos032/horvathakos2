import React, { useState,useEffect } from "react";
import './Aboutus.css';
import axios from "axios";


export const AboutSection = () => {
  const [showAbout, setShowAbout] = useState(false);
  const [likes, setLikes] = useState(0);
  const [feedback, setFeedback] = useState("");
  const [submittedFeedback, setSubmittedFeedback] = useState([]);
  const [selectedRating, setSelectedRating] = useState(0);
  const [userLiked, setUserLiked] = useState(false);


  const toggleAboutText = () => {
    setShowAbout((prevState) => !prevState);
  };

  const closePopup = () => {
    setShowAbout(false);
  };

  useEffect(() => {
    if (showAbout) {
      const user = JSON.parse(localStorage.getItem("user"));
      if (user) {
        axios.get(`http://localhost:3001/api/user-like/${user.felhasznalo_id}`)
          .then((res) => setUserLiked(res.data.like === 1))
          .catch(() => console.error("Nem siker√ºlt lek√©rni a felhaszn√°l√≥ st√°tusz√°t."));
      }
  
      axios.get("http://localhost:3001/api/total-likes")
        .then((res) => setLikes(res.data.totalLikes))
        .catch(() => console.error("Nem siker√ºlt lek√©rni a kedvel√©sek sz√°m√°t."));
    }
  }, [showAbout]);
  

  const handleLike = () => {
    const user = JSON.parse(localStorage.getItem("user"));
    if (!user) {
      alert("Jelentkezz be a kedvel√©shez!");
      return;
    }
  
    axios.post("http://localhost:3001/api/toggle-like", { userId: user.felhasznalo_id })
      .then((response) => {
        const newLikeValue = response.data.newLikeValue;
        setUserLiked(newLikeValue === 1);
        axios.get("http://localhost:3001/api/total-likes")
          .then((res) => setLikes(res.data.totalLikes));
  
        if (newLikeValue === 1) {
          alert("K√∂sz√∂nj√ºk a kedvel√©st!");
        } else {
          alert("Kedvel√©s visszavonva!");
        }
      })
      .catch((err) => alert(err.response?.data?.error || "Hiba t√∂rt√©nt!"));
  };
  
  
  const handleFeedbackChange = (e) => {
    setFeedback(e.target.value);
  };

  const handleFeedbackSubmit = (e) => {
    e.preventDefault();
    if (feedback.trim()) {
      const newFeedback = {
        text: feedback.trim(),
        rating: selectedRating,
        date: new Date().toLocaleString("hu-HU", {
          year: "numeric",
          month: "long",
          day: "numeric",
          hour: "2-digit",
          minute: "2-digit"
        })
      };
      setSubmittedFeedback([...submittedFeedback, newFeedback]);
      setFeedback("");
      setSelectedRating(0);
    }
  };

  

  return (
    <div className="about-container full-footer">
      <div className="about-footer">
        <div className="contact-box">
          <h3 className="contact-title">El√©rhet≈ës√©geink:</h3>
          <ul className="contact-list">
            <li><strong>Email:</strong> info@fozomester.hu</li>
            <li><strong>Telefon:</strong> +36 30 123 4567</li>
            <li><strong>Facebook:</strong> <a href="https://www.facebook.com/fozomester" target="_blank" rel="noopener noreferrer">F≈ëz≈ëmester</a></li>
            <li><strong>Instagram:</strong> <a href="https://www.instagram.com/fozomester" target="_blank" rel="noopener noreferrer">@fozomester</a></li>
          </ul>
        </div>
        <div className="advertisement-box">
          <h3 className="advertisement-title">Ne hagyd ki!</h3>
          <p className="advertisement-text">
                   √údv√∂zl√ºnk a Finoms√°gok oldal√°n! Fedezd fel receptjeinket, √©s hozd el a konyh√°ba a szenved√©lyt!
                      Mondj v√©lem√©nyt!
                      K√≠v√°ncsiak vagyunk a visszajelz√©sedre! Hogyan tal√°ltad az oldalunkat? Mi tetszett, min v√°ltoztatn√°l? Oszd meg vel√ºnk, √©s seg√≠ts, hogy m√©g jobb√° v√°ljunk!
          </p>
          <button className="about-btn" onClick={toggleAboutText}>
            R√≥lunk
          </button>
        </div>
      </div>

      {showAbout && (
        <div className="about-popup show" onClick={closePopup}>
          <div className="popup-content" onClick={(e) => e.stopPropagation()}>
            <h2>R√≥lunk</h2>
            <img src="public/M√©dia.png" alt="R√≥lunk" className="about-image" />
            <p>
              Mi egy szenved√©lyes √©s kreat√≠v csapat vagyunk, akik elk√∂telezettek amellett, hogy a f≈ëz√©s mindenki sz√°m√°ra el√©rhet≈ë √©s √©lvezetes legyen.
            </p>
            <p>
              C√©lunk, hogy v√°ltozatos, k√∂nnyen k√∂vethet≈ë √©s inspir√°l√≥ recepteket k√≠n√°ljunk, amelyek seg√≠ts√©g√©vel b√°rki magabiztosan alkothat a konyh√°ban.
            </p>
            <p>
              Emellett k√∂z√∂ss√©g√©p√≠t≈ë szerep√ºnk is fontos sz√°munkra. Csatlakozz hozz√°nk, √©s tapasztald meg, hogy a f≈ëz√©s nem csup√°n egy napi rutin, hanem egy igazi kreat√≠v kaland!
            </p>

            <div className="about-actions">
              <button className="close-btn" onClick={closePopup}>Kil√©p√©s</button>
              <button className="like-btn" onClick={handleLike}>{userLiked ? "üíî Kedvel√©s visszavon√°sa" : "‚ù§Ô∏è Kedvel√©s"}</button>
              <p id="like-count">Weboldal kedvel√©sek sz√°ma: <strong>{likes}</strong></p>
            </div>

            <form className="feedback-form" onSubmit={handleFeedbackSubmit}>
              <label htmlFor="feedback">Oszd meg vel√ºnk a v√©lem√©nyed:</label>
              <textarea
                id="feedback"
                value={feedback}
                onChange={handleFeedbackChange}
                placeholder="√çrd le, mi tetszett vagy min jav√≠tan√°l..."
                required
              ></textarea>
              <div className="star-rating">
                {[1, 2, 3, 4, 5].map((star) => (
                  <span
                    key={star}
                    className={star <= selectedRating ? "star selected" : "star"}
                    onClick={() => setSelectedRating(star)}
                  >
                    ‚≠ê
                  </span>
                ))}
              </div>
              <button type="submit" className="submit-feedback">V√©lem√©ny elk√ºld√©se</button>
            </form>

            {submittedFeedback.length > 0 && (
              <div className="feedback-list">
                <h4>√çgy l√°tt√°k m√°sok:</h4>
                {submittedFeedback.map((item, index) => (
                  <div key={index} className="feedback-entry fade-in">
                    <p className="feedback-text">üí¨ <strong>{item.text}</strong></p>
                    <p className="feedback-meta">√ârt√©kel√©s: {item.rating} ‚≠ê ‚Äì {item.date}</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
};